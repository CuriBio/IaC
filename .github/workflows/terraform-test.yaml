name: 'Terraform Plan/Apply'
on:
  workflow_dispatch:
  # pull_request:
  # push:
  #   branches:
  #     - main
  #     - development

jobs:
  terraform:
    name: 'Terraform'
    runs-on: "ubuntu-20.04"

    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Terraform setup'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7

      - name: 'Terragrunt setup'
        uses: ./.github/actions/terragrunt
        with:
          terragrunt_version: 0.28.7

      # - name: 'Terragrunt init'
      #   id: init
      #   working-directory: "./infra/environment/${{ steps.target_env.outputs.target_env }}"
      #   run: terragrunt init --terragrunt-non-interactive

      # - name: 'Terraform plan dev'
      #   id: plan_dev
      #   if: github.event.pull_request.base.ref == 'development'
      #   working-directory: "./infra/environment/development"
      #   run: terragrunt run-all plan --terragrunt-non-interactive -no-color

      - name: 'Terragrunt plan output'
        id: plan_dev
        uses: ./.github/actions/terragrunt_plan
        with:
          working_cir: "./infra/environment/test"

      - name: 'Terragrunt plan dev output'
        uses: actions/github-script@0.9.0
        env:
          PLAN: "terragrunt\n${{ steps.plan_dev.outputs.plan_output }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            #### Terragrunt Initialization \`${{ steps.plan_dev.outputs.init_outcome }}\`
            #### Terragrunt Plan \`${{ steps.plan_dev.plan_outcome }}\`
            <details><summary>Show Plan</summary>

            \`\`\` terraform
            "terragrunt\n${{ steps.plan_dev.outputs.plan_output }}"
            \`\`\`

            </details>
            Pusher: @${{ github.actor }}`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # - name: 'Terragrunt plan status'
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1
