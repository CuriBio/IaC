name: 'Terraform Plan'
on:
  workflow_dispatch:
  pull_request:
    branches:
      - jrp-test-tf

defaults:
  if: github.event.pull_request.base.ref == 'jrp-test-tf'
  env:
    WORKING_DIR: "./infra/environment/test"
  if: github.event.pull_request.base.ref == 'development'
  env:
    WORKING_DIR: "./infra/environment/modl"
  if: github.event.pull_request.base.ref == 'main'
  env:
    WORKING_DIR: "./infra/environment/prod"
  run:
    working-directory: ${{ env.WORKING_DIR }}
    shell: bash

jobs:
  terraform:
    name: 'Terraform'
    runs-on: "ubuntu-20.04"

    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Terraform Setup'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7

      - name: 'Terragrunt Setup'
        uses: ./.github/actions/terragrunt
        with:
          terragrunt_version: 0.28.7

      - name: 'Terragrunt Init'
        id: init
        run: terragrunt init --terragrunt-non-interactive

      - name: 'Terraform Plan'
        id: plan
        run: terragrunt run-all plan --terragrunt-non-interactive -no-color

      - name: 'Terragrunt plan output'
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terragrunt\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            #### Terragrunt Initialization \`${{ steps.init.outcome }}\`
            #### Terragrunt Plan \`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>

            \`\`\` terraform
            ${process.env.PLAN}
            \`\`\`

            </details>
            Pusher: @${{ github.actor }}`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: 'Terragrunt plan status'
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: 'Test'
        if: github.event.pull_request.base.ref == 'jrp-test-tf'
        run: echo "Test"
