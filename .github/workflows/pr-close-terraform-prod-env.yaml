name: 'Close PR into Prod'
on:
  workflow_dispatch:
    inputs:
      randomlyseed:
        description: 'Pytest Randomly Seed'
        required: false
        default: ''
  pull_request:
    types: [closed]
    branches-ignore:
    - 'development'

jobs:
  terraform:
    name: 'Terraform PR Close'
    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-20.04"
        python-version:
            - 3.9

    runs-on: ${{ matrix.os }}

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_user_id: ${{ github.actor }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Setup Python'
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: |
        python -c "import sys; print(sys.version)"
        python -m venv venv

    - name: Activate virtual environment (Linux/MacOS)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: . venv/bin/activate

    - name: Display Pip Version and confirm environment empty
      run: |
        pip -V
        pip freeze

    - name: Cache Python dependencies
      uses: actions/cache@v2.1.4
      env:
        cache-name: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ matrix.os }}-${{ matrix.python-version }}-build-${{ env.cache-name }}-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.python-version }}-build-${{ env.cache-name }}-

    - name: Install Dev Dependencies
      run: pip install -r requirements-dev.txt

    - name: Log full installed packages
      run: pip freeze

    - name: 'Terraform setup'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.7

    - name: 'Terraform apply prod environment'
      if: github.event.pull_request.merged == true
      run: python ./.github/scripts/tf-deploy-env.py --workspace prod --apply

    - name: Run Tests with randomly generated seed
      if: github.event.inputs.randomlyseed == ''
      run: pytest -xsvv tests/ --tf-workspace-name prod

    - name: Run Tests with supplied pytest-randomly seed
      if: github.event.inputs.randomlyseed != ''
      run: pytest -xsvv tests/ --tf-workspace-name prod --randomly-seed=${{ github.event.inputs.randomlyseed }}
