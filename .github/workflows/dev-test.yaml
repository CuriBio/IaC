# Based on https://github.com/prettier/prettier/blob/master/.github/workflows/dev-test.yml
name: Dev

on:
  workflow_dispatch:
    inputs:
      randomlyseed:
        description: 'Pytest Randomly Seed'
        required: false
        default: ''
  schedule:
    - cron: '0 5 * * *'
  push:
    branches:
      - main
      - development
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-20.04"
        python-version:
            - 3.9
        include:
          - os: "ubuntu-20.04"
            python-version: 3.9
            IS_FASTEST_JOB: true
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: |
          python -c "import sys; print(sys.version)"
          python -m venv venv

      - name: 'Terraform Setup'
        # setup Terraform to make sure to have the correct version when running pre-commit hooks
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7

      - name: Cache Pre-commit hooks
        uses: actions/cache@v2.1.4
        env:
          cache-name: cache-pre-commit-hooks
        if: matrix.IS_FASTEST_JOB == true
        with:
          path: ./.precommit_cache
          key: ${{ matrix.os }}-${{ matrix.python-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-build-${{ env.cache-name }}-


      - name: Activate virtual environment (Linux/MacOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: . venv/bin/activate

      - name: Display Pip Version and confirm environment empty
        run: |
          pip -V
          pip freeze
      - name: Install Dev Dependencies
        run: pip install -r requirements-dev.txt

      - name: Log full installed packages
        run: pip freeze

      - name: Run pre-commit hooks
        if: matrix.IS_FASTEST_JOB == true
        # only enable pre-commit on the fastest job
        env:
          PRE_COMMIT_HOME: ./.precommit_cache
        run: |
          pre-commit install
          pre-commit run -a