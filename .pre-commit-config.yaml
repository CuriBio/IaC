minimum_pre_commit_version: 2.4.0
# default_stages: [commit, push]
# fail_fast: true
repos:

# Git-related
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.4.0  # Use the ref you want to point at
    hooks:
    -   id: forbid-new-submodules
-   repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 2.1.5  # Use the ref you want to point at
    hooks:
    -   id: git-dirty

# Reformatting (should generally come before any file format or other checks, because reformatting can change things)
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.4.0  # Use the ref you want to point at
    hooks:
    -   id: trailing-whitespace
    -   id: pretty-format-json
        args: [--autofix, --no-sort-keys]
-   repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.48.0
    hooks:
    -   id: terraform_fmt

-   repo: https://github.com/sqlalchemyorg/zimports
    rev: 0.3.0  # pick a hash or tag to point to
    hooks:
    -   id: zimports

-   repo: https://github.com/psf/black
    rev: 19.10b0  # pick a git hash / tag to point to
    hooks:
    -   id: black
        args: [--line-length=110]


# Safety/Security Issues
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.4.0  # Use the ref you want to point at
    hooks:
    -   id: detect-private-key

# Invalid File Checks
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.4.0  # Use the ref you want to point at
    hooks:
    -   id: check-added-large-files
        args: ['--maxkb=123']
    -   id: check-json
    -   id: check-yaml
    -   id: check-xml
    -   id: check-merge-conflict
    -   id: check-case-conflict
    -   id: end-of-file-fixer

-   repo: https://gitlab.com/pycqa/flake8
    rev: 3.9.0  # pick a git hash / tag to point to
    hooks:
    -   id: flake8

-   repo: https://github.com/NanoSurface-Biomedical/pre-commit-pylint
    rev: "5a76725fa664ca733db485598da5c8460cf3347f" # pick a git hash / tag to point to
    hooks:
    -   id: pylint-pass-with-displayed-warnings
        name: pylint-src
        args:
        - --codes-to-allow=W0511
        - src
        - --rcfile=src/pylintrc
        - --ignore-patterns=.*~.*
        - --jobs 0
        files: ('src/.*\.py$')
        exclude: '.*\~.*'
        verbose: true
    -   id: pylint-pass-with-displayed-warnings
        name: pylint-tests
        args:
        - --codes-to-allow=W0511
        - tests
        - --rcfile=tests/pylintrc
        - --ignore-patterns=.*~.*
        - --jobs 0
        files: 'tests/.*\.py$'
        exclude: ('.*\~.*')
        verbose: true
    -   id: python-check-no-print-statments
